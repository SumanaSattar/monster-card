{"version":3,"sources":["Components/Card/Card.component.jsx","Components/Card-list/Card-list.component.jsx","Components/Search-field/SearchField.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","console","log","monsters","className","src","id","alt","name","email","CardList","monster","map","SearchField","placeholder","evenHandler","type","onChange","App","state","searchField","fetch","then","Response","json","users","setState","this","filteredField","filter","mon","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUACaA,EAAO,SAACC,GAEjB,OADAC,QAAQC,IAAIF,EAAMG,UAElB,sBAAKC,UAAU,iBAAf,UAEI,qBAAKC,IAAG,+BAA0BL,EAAMG,SAASG,GAAzC,yBAAoEC,IAAI,mBAChF,oBAAIH,UAAU,MAAd,SAAqBJ,EAAMG,SAASK,OACpC,mBAAGJ,UAAU,MAAb,SAAoBJ,EAAMG,SAASM,YCQ5BC,EAbE,SAACV,GAEd,OACI,qBAAKI,UAAU,YAAf,SAEGJ,EAAMW,QAAQC,KAAI,SAAAD,GAEjB,OAAO,cAAC,EAAD,CAAuBR,SAAUQ,GAAtBA,EAAQL,UCHvBO,G,MANK,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAYC,EAAiB,EAAjBA,YAC9B,OACI,uBAAOX,UAAU,aAAaY,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MCoCzEG,E,kDAjCb,aAAc,IAAD,8BACX,gBACKC,MAAQ,CACXR,QAAQ,GACRS,YAAY,IAJH,E,qDAQb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAG,EAAKC,SAAS,CAACf,QAAQc,S,oBAEvC,WAAU,IAAD,SACqBE,KAAKR,MAA1BR,EADA,EACAA,QAAQS,EADR,EACQA,YACTQ,EAAgBjB,EAAQkB,QAAO,SAAAC,GAAG,OAAEA,EAAItB,KAAKuB,cAAcC,SAASZ,MAE1E,OADAnB,QAAQC,IAAI0B,GAEV,gCACE,oBAAIxB,UAAU,cAAd,2BACA,cAAC,EAAD,CAAaU,YAAY,oBAAoBC,YAAa,SAAAkB,GAAI,EAAKP,SAAS,CAACN,YAAYa,EAAEC,OAAOC,QAAO,kBAAIlC,QAAQC,IAAI,EAAKiB,MAAMC,mBAEpI,cAAC,EAAD,CAAUT,QAASiB,W,GAvBTQ,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b2081533.chunk.js","sourcesContent":["import './card.styles.css'\r\nexport const Card = (props) => {\r\n    console.log(props.monsters)\r\n    return ( \r\n    <div className=\"card-container\">\r\n\r\n        <img src={`https://robohash.org/${props.monsters.id}?set=set2size=180x180`} alt=\"monster images\" />  \r\n        <h2 className='App'>{props.monsters.name}</h2>\r\n        <p className='App'>{props.monsters.email}</p>\r\n        \r\n    </div> );\r\n}\r\n ","import './Card-list.style.css'\r\nimport { Card } from './../Card/Card.component'\r\n\r\nconst CardList = (props) => {\r\n\r\n    return(\r\n        <div className='card-list'>\r\n       \r\n          {props.monster.map(monster=>{\r\n           \r\n            return <Card key={monster.id} monsters={monster}/>\r\n      \r\n         })}\r\n        </div>\r\n    )\r\n} \r\nexport default CardList","import './SearchField.css'\r\nconst SearchField = ({placeholder,evenHandler}) => {\r\n    return (  \r\n        <input className='search App' type='search' placeholder={placeholder} onChange={evenHandler}></input>\r\n            );\r\n}\r\n \r\nexport default SearchField;","\nimport './App.css';\nimport {Component} from 'react';\nimport CardList from './Components/Card-list/Card-list.component';\nimport SearchField from './Components/Search-field/SearchField.component'\nclass App extends Component {\n  constructor(){\n    super();\n    this.state = {\n      monster:[] ,\n      searchField:''     \n    }\n    \n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(Response=> Response.json())\n    .then(users=> this.setState({monster:users}))\n  }\n  render() {\n    const {monster,searchField}=this.state\n    const filteredField = monster.filter(mon=>mon.name.toLowerCase().includes(searchField))\n    console.log(filteredField)\n    return(\n      <div>\n        <h1 className=\"heading App\">Monster Cards</h1>\n        <SearchField placeholder='search the robots' evenHandler={e=>{this.setState({searchField:e.target.value},()=>console.log(this.state.searchField))}}/>\n        \n        <CardList monster={filteredField} />\n       \n        \n      </div>\n    );\n  }\n\n\n}\n  \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}